[gd_scene load_steps=5 format=3 uid="uid://4feies2oagdp"]

[ext_resource type="SpriteFrames" uid="uid://v1axc2nifmul" path="res://Themes/LightningConnection.tres" id="2_dvep0"]
[ext_resource type="Script" path="res://Code/Constants/Connected.gd" id="3_8kjqr"]

[sub_resource type="Shader" id="Shader_7xfeb"]
code = "shader_type canvas_item;

uniform vec4 makeTransparent : source_color = vec4(1,1,1,1);
uniform vec4 otherColor: source_color = vec4(1,1,1,1);
uniform float margin: hint_range(0.0, 1.0, 0.01) = 0.3;
uniform float otherColorMix: hint_range(0.0, 1.0, 0.1) = .1;

void vertex() {
	COLOR = vec4(1);
}

void fragment() {
	bool made_transparent = false;
	vec4 input = texture(TEXTURE, UV);
	
	if (input == makeTransparent){
		COLOR = vec4(0.0,0.0,0.0,0.0);
		made_transparent = true;
		}
	
	if (margin != 0.0){
		vec3 margin_input = vec3(makeTransparent.r + margin,makeTransparent.g + margin, input.b + margin);
		bool red_check = input.r <= margin_input.r;
		bool green_check = input.g <= margin_input.g;
		bool blue_check = input.b <= margin_input.b;
		if (red_check && green_check && blue_check){
			COLOR = vec4(0.0,0.0,0.0,0.0);
			made_transparent = true;
		}
		
		if (made_transparent == false){
			vec4 finalColor = vec4(mix(input, otherColor, otherColorMix));
			COLOR = finalColor;
		}
		
	}
	
	// Called for every pixel the material is visible on.
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fpwld"]
resource_local_to_scene = true
shader = SubResource("Shader_7xfeb")
shader_parameter/makeTransparent = Color(0.117647, 0.117647, 0.117647, 1)
shader_parameter/otherColor = Color(1, 1, 1, 1)
shader_parameter/margin = 0.12
shader_parameter/otherColorMix = 0.4

[node name="Connected" type="AnimatedSprite2D"]
visibility_layer = 2
z_index = 1
material = SubResource("ShaderMaterial_fpwld")
scale = Vector2(0.1, 0.1)
sprite_frames = ExtResource("2_dvep0")
animation = &"new_animation_1"
autoplay = "new_animation_1"
frame_progress = 0.119858
speed_scale = 2.0
script = ExtResource("3_8kjqr")
