[gd_scene load_steps=36 format=3 uid="uid://bcwaljk6txjdw"]

[ext_resource type="Script" path="res://Code/Constants/Test.gd" id="1_3opgt"]
[ext_resource type="Shader" path="res://Shaders/ShaderCode/Shine2D.gdshader" id="2_4bvjw"]
[ext_resource type="Material" uid="uid://nqsj1mjjc8b3" path="res://Shaders/Gradients/Earth.tres" id="3_yqcw8"]
[ext_resource type="Texture2D" uid="uid://ddt27me2jsi6a" path="res://Art/Beads/EarthOrb.png" id="4_v2dqy"]
[ext_resource type="Material" uid="uid://bsw4b6ve44gpt" path="res://Shaders/Gradients/Light.tres" id="5_hvmsy"]
[ext_resource type="Texture2D" uid="uid://dy73pk3cbyn7p" path="res://Art/Beads/LightOrb.png" id="6_vobw2"]
[ext_resource type="Material" uid="uid://c8rlxmxovlnnc" path="res://Shaders/Gradients/Air.tres" id="7_c0alx"]
[ext_resource type="Texture2D" uid="uid://pbaqi8u6vslb" path="res://Art/Beads/AirOrb.png" id="8_2oqbg"]
[ext_resource type="Material" uid="uid://i5f7t6uxbybc" path="res://Shaders/Gradients/Liquid.tres" id="9_0u4vk"]
[ext_resource type="Texture2D" uid="uid://cc78oeoy5ldrd" path="res://Art/Beads/LiquidOrb.png" id="10_tw8gi"]
[ext_resource type="Shader" uid="uid://j41ttxtkgdcj" path="res://Shaders/Gradients/Dark.tres" id="11_nyjtk"]
[ext_resource type="Texture2D" uid="uid://2tvxklp6un8s" path="res://Art/Beads/DarkOrb.png" id="12_4yibj"]
[ext_resource type="Texture2D" uid="uid://dpr4gisyi1233" path="res://Art/ETC/icon.svg" id="13_qvc0m"]
[ext_resource type="PackedScene" uid="uid://c1nqp81cess0x" path="res://Scenes/Board&Beads/SingleBead.tscn" id="14_1yrqu"]
[ext_resource type="Shader" path="res://Shaders/ShaderCode/BurnOut.gdshader" id="15_prer4"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8dyg2"]
shader = ExtResource("2_4bvjw")
shader_parameter/shine_color = Color(1, 0.717647, 1, 1)
shader_parameter/shine_speed = 8.4
shader_parameter/shine_size = 0.1
shader_parameter/shine_bool = true

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ch8nq"]
shader = ExtResource("2_4bvjw")
shader_parameter/shine_color = Color(1, 1, 1, 1)
shader_parameter/shine_speed = 1.0
shader_parameter/shine_size = 0.01
shader_parameter/shine_bool = true

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ehf7u"]
shader = ExtResource("11_nyjtk")
shader_parameter/effect_filling = 1.0
shader_parameter/angle = 90.0
shader_parameter/keep_saturation = 0.29
shader_parameter/keep_luminance = 0.49
shader_parameter/color_start = Color(0.823529, 0.282353, 0.937255, 1)
shader_parameter/start_pos = 0.0
shader_parameter/color_mid = Color(0.501961, 0.0745098, 0.380392, 1)
shader_parameter/mid_pos = 0.23
shader_parameter/color_end = Color(0.270588, 0.0392157, 0.203922, 1)
shader_parameter/end_pos = 1.0
shader_parameter/midpos_enabled = true
shader_parameter/range_start = 0.0
shader_parameter/range_end = 1.0
shader_parameter/range_softedge = 0.1

[sub_resource type="Gradient" id="Gradient_s422o"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ttodo"]

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_u52aq"]
color_ramp = SubResource("Gradient_s422o")
noise = SubResource("FastNoiseLite_ttodo")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_myv5o"]
resource_local_to_scene = true
shader = ExtResource("15_prer4")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.45
shader_parameter/burn_color = Color(1, 1, 1, 1)
shader_parameter/modulate = Color(1, 1, 1, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_u52aq")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_han5n"]
resource_local_to_scene = true
shader = ExtResource("15_prer4")
shader_parameter/dissolve_value = 1.0
shader_parameter/burn_size = 0.45
shader_parameter/burn_color = Color(1, 1, 1, 1)
shader_parameter/modulate = Color(1, 1, 1, 1)
shader_parameter/dissolve_texture = SubResource("NoiseTexture2D_u52aq")

[sub_resource type="Shader" id="Shader_2o8px"]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float screen_height = 640.0;
uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	COLOR = mix(vec4(0.0), COLOR, float(int(UV.y * screen_height) % 2));
}"

[sub_resource type="Gradient" id="Gradient_dmdd0"]
offsets = PackedFloat32Array(0, 0.573077, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.478431, 0.0705882, 0.364706, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_n5e8k"]
gradient = SubResource("Gradient_dmdd0")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vq14x"]
shader = SubResource("Shader_2o8px")
shader_parameter/screen_height = 640.0
shader_parameter/amplitude = 0.075
shader_parameter/frequency = 10.0
shader_parameter/speed = 2.0
shader_parameter/amplitude_vertical = 0.0
shader_parameter/frequency_vertical = 0.0
shader_parameter/speed_vertical = 0.0
shader_parameter/scroll_direction = Vector2(0, 0)
shader_parameter/scrolling_speed = 0.08
shader_parameter/enable_palette_cycling = true
shader_parameter/palette_speed = 0.1
shader_parameter/palette = SubResource("GradientTexture1D_n5e8k")

[sub_resource type="Shader" id="Shader_1q24t"]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float screen_height = 640.0;
uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	COLOR = mix(vec4(0.0), COLOR, float(int(UV.y * screen_height) % 2));
}"

[sub_resource type="Gradient" id="Gradient_do27c"]
resource_local_to_scene = true
offsets = PackedFloat32Array(0, 0.688462, 1)
colors = PackedColorArray(0, 0, 0, 1, 0.5, 0.5, 0.5, 1, 1, 1, 1, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_0ee3p"]
resource_local_to_scene = true
gradient = SubResource("Gradient_do27c")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cyof1"]
resource_local_to_scene = true
shader = SubResource("Shader_1q24t")
shader_parameter/screen_height = 640.0
shader_parameter/amplitude = 0.075
shader_parameter/frequency = 10.0
shader_parameter/speed = 2.0
shader_parameter/amplitude_vertical = 0.0
shader_parameter/frequency_vertical = 0.0
shader_parameter/speed_vertical = 0.0
shader_parameter/scroll_direction = Vector2(0, 0)
shader_parameter/scrolling_speed = 0.08
shader_parameter/enable_palette_cycling = true
shader_parameter/palette_speed = 0.1
shader_parameter/palette = SubResource("GradientTexture1D_0ee3p")

[sub_resource type="Shader" id="Shader_v2ffx"]
code = "/* 
Earthbound battle backgrounds shader with scrolling effect and palette cycling like in the original game.
@retr0_dev
	
Apply the shader to a TextureRect or a Sprite. Use a texture with some shapes in a transparent background for best results.
You can then use a ColorRect or another method to paint the background.
You can use the shader on multiple TextureRects and obtain a double-buffer effect tweaking the values for each one, remember to Make Unique the shader material.
*/
shader_type canvas_item;

uniform float screen_height = 640.0;
uniform float amplitude = 0.075;
uniform float frequency = 10.0;
uniform float speed = 2.0;
uniform float amplitude_vertical = 0.0;
uniform float frequency_vertical = 0.0;
uniform float speed_vertical = 0.0;
uniform vec2 scroll_direction = vec2(0.0, 0.0);
uniform float scrolling_speed = 0.08;
uniform bool enable_palette_cycling = false;
uniform sampler2D palette;
uniform float palette_speed = 0.1;

void fragment()
{
	float diff_x = amplitude * sin((frequency * UV.y) + (speed * TIME));
	float diff_y = amplitude_vertical * sin((frequency_vertical * UV.y)  + (speed_vertical * TIME));
	vec2 scroll = scroll_direction * TIME * scrolling_speed;
	vec4 tex = texture(TEXTURE, vec2(UV.x + diff_x, UV.y + diff_y) + scroll);
	float palette_swap = mod(tex.r - TIME * palette_speed, 1.0);
	
	if (enable_palette_cycling)
	{
		COLOR = vec4(texture(palette, vec2(palette_swap, 0)).rgb, tex.a);
	}
	else COLOR = tex;
	COLOR = mix(vec4(0.0), COLOR, float(int(UV.y * screen_height) % 2));
}"

[sub_resource type="Gradient" id="Gradient_pnkoy"]
offsets = PackedFloat32Array(0, 0.557692, 1)
colors = PackedColorArray(0.42, 0.30086, 0.1092, 1, 0.87138, 0.94, 0.2538, 1, 0.42, 0.30086, 0.1092, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_0lc5k"]
gradient = SubResource("Gradient_pnkoy")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_44288"]
resource_local_to_scene = true
shader = SubResource("Shader_v2ffx")
shader_parameter/screen_height = 640.0
shader_parameter/amplitude = 0.075
shader_parameter/frequency = 10.0
shader_parameter/speed = 2.0
shader_parameter/amplitude_vertical = 0.0
shader_parameter/frequency_vertical = 0.0
shader_parameter/speed_vertical = 0.0
shader_parameter/scroll_direction = Vector2(0, 0)
shader_parameter/scrolling_speed = 0.08
shader_parameter/enable_palette_cycling = true
shader_parameter/palette_speed = 0.0
shader_parameter/palette = SubResource("GradientTexture1D_0lc5k")

[node name="Control" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
offset_left = -178.0
offset_top = -78.0
offset_right = 1475.0
offset_bottom = 941.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_3opgt")

[node name="Button" type="Button" parent="."]
layout_mode = 0
offset_left = 579.0
offset_top = 392.0
offset_right = 664.0
offset_bottom = 439.0
text = "Kill"

[node name="TextureRect2" type="TextureRect" parent="."]
material = ExtResource("5_hvmsy")
layout_mode = 0
offset_left = -1157.0
offset_top = -50.0
offset_right = -77.0
offset_bottom = 1025.0
texture = ExtResource("6_vobw2")

[node name="BackBufferCopy" type="BackBufferCopy" parent="."]
material = SubResource("ShaderMaterial_8dyg2")
position = Vector2(1325, -950.5)
scale = Vector2(1.19, 1.265)

[node name="TextureRect" type="TextureRect" parent="BackBufferCopy"]
material = ExtResource("7_c0alx")
offset_left = -2583.19
offset_top = 148.221
offset_right = -1503.19
offset_bottom = 1223.22
texture = ExtResource("8_2oqbg")

[node name="TextureRect4" type="TextureRect" parent="BackBufferCopy"]
material = ExtResource("3_yqcw8")
offset_left = -2016.81
offset_top = 250.198
offset_right = -936.807
offset_bottom = 1325.2
texture = ExtResource("4_v2dqy")

[node name="Node2D" type="Node2D" parent="."]
material = SubResource("ShaderMaterial_ch8nq")
position = Vector2(1719, 420)

[node name="TextureRect3" type="TextureRect" parent="."]
material = ExtResource("9_0u4vk")
layout_mode = 0
offset_left = -1192.0
offset_top = -1090.0
offset_right = -112.0
offset_bottom = -15.0
texture = ExtResource("10_tw8gi")

[node name="TextureRect5" type="TextureRect" parent="."]
material = SubResource("ShaderMaterial_ehf7u")
layout_mode = 0
offset_left = -2213.0
offset_top = -90.0
offset_right = -1133.0
offset_bottom = 985.0
texture = ExtResource("12_4yibj")

[node name="Icon" type="Sprite2D" parent="."]
position = Vector2(1719, 420)
rotation = 1.79594
texture = ExtResource("13_qvc0m")

[node name="SinglePiece" parent="." instance=ExtResource("14_1yrqu")]
material = SubResource("ShaderMaterial_myv5o")
position = Vector2(453, 400)

[node name="SinglePiece2" parent="." instance=ExtResource("14_1yrqu")]
material = SubResource("ShaderMaterial_han5n")
position = Vector2(502, 398)

[node name="Icon2" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_vq14x")
position = Vector2(257, 168)
texture = ExtResource("13_qvc0m")

[node name="Icon3" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_cyof1")
position = Vector2(477, 292)
texture = ExtResource("13_qvc0m")

[node name="Icon4" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_cyof1")
position = Vector2(799, 96)
texture = ExtResource("13_qvc0m")

[node name="Icon5" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_cyof1")
position = Vector2(813, 270)
texture = ExtResource("13_qvc0m")

[node name="Icon6" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_44288")
position = Vector2(507, 132)
texture = ExtResource("13_qvc0m")

[connection signal="pressed" from="Button" to="." method="_on_button_pressed"]
